{"version":3,"sources":["types/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoList","todos","onHandleOpenModal","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","onChangeQuery","onChangeSelect","query","useState","selectOption","setSelectOption","value","onChange","event","target","placeholder","style","pointerEvents","All","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onHandleCloseModal","user","setUser","useEffect","userId","href","name","filterTodosByQuery","selectedOption","filter","content","normalizedQuery","trim","toLowerCase","includes","hasNormalizedQuery","Active","filterBySelect","App","setTodos","showModal","setShowModal","setQuery","setSelectedTodo","showLoader","setShowLoader","setSelectedOption","newTodos","visibleTodos","newQuery","newOption","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e28ec28.chunk.js","sourcesContent":["export enum Select {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onHandleOpenModal: (todo: Todo) => void;\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onHandleOpenModal = () => {},\n  selectedTodo,\n}) => {\n  return (\n    <table\n      className=\"table is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td\n              className=\"is-vcentered\"\n            >\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  'has-text-success',\n                  { 'has-text-danger': !todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onHandleOpenModal(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames({\n                    'far fa-eye': selectedTodo !== todo,\n                    'far fa-eye-slash': selectedTodo === todo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { Select } from '../../types/Select';\n\ntype Props = {\n  onChangeQuery: (query: string) => void,\n  onChangeSelect: (event: string) => void,\n  query: string,\n\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeQuery = () => {},\n  onChangeSelect = () => {},\n  query,\n}) => {\n  const [selectOption, setSelectOption] = useState<string>();\n\n  function onChangeSetQuery(event: React.ChangeEvent<HTMLInputElement>) {\n    onChangeQuery(event.target.value);\n  }\n\n  function removeQuery() {\n    onChangeQuery('');\n  }\n\n  const onChangeOption\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectOption(event.target.value);\n    onChangeSelect(event.target.value);\n    onChangeQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span\n          className=\"select\"\n        >\n          <select\n            data-cy=\"statusSelect\"\n            id=\"select\"\n            value={selectOption}\n            onChange={onChangeOption}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p\n        className=\"control is-expanded has-icons-left has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onChangeSetQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: Select.All }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={removeQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onHandleCloseModal: () => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  onHandleCloseModal = () => {},\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(setUser);\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onHandleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!selectedTodo?.completed\n                ? <strong className=\"has-text-danger\">Planned</strong>\n                : <strong className=\"has-text-success\">Done</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.name}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Select } from './types/Select';\n\nfunction hasNormalizedQuery(content: string, query: string) {\n  const normalizedQuery = query.trim().toLowerCase();\n\n  return content.toLowerCase().includes(normalizedQuery);\n}\n\nfunction filterBySelect(todo: Todo, selectedOption: string) : boolean {\n  if (!selectedOption || selectedOption === Select.All) {\n    return true;\n  }\n\n  if (selectedOption === Select.Active) {\n    return !todo.completed;\n  }\n\n  return todo.completed;\n}\n\nfunction filterTodosByQuery(todos: Todo[], query: string, selectedOption: string) {\n  if (!query && !selectedOption) {\n    return todos;\n  }\n\n  return todos.filter((todo) => (\n    hasNormalizedQuery(todo.title, query)\n    && filterBySelect(todo, selectedOption)\n  ));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [showLoader, setShowLoader] = useState(true);\n  const [selectedOption, setSelectedOption] = useState('');\n\n  useEffect(() => {\n    getTodos().then((newTodos) => {\n      setTodos(newTodos);\n      setShowLoader(false);\n    });\n  }, []);\n\n  const visibleTodos = filterTodosByQuery(todos, query, selectedOption);\n\n  const onHandleOpenModal = (todo: Todo) => {\n    setShowModal(true);\n    setSelectedTodo(todo);\n  };\n\n  const onHandleCloseModal = () => {\n    setShowModal(false);\n    setSelectedTodo(null);\n  };\n\n  const filterCallBack = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  const onChangeSelect = (newOption: string) => {\n    setSelectedOption(newOption);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeQuery={filterCallBack}\n                onChangeSelect={onChangeSelect}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {showLoader && (\n                <Loader />\n              )}\n\n              {!showLoader && (\n                <TodoList\n                  todos={visibleTodos}\n                  onHandleOpenModal={onHandleOpenModal}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal === true && (\n        <TodoModal\n          onHandleCloseModal={onHandleCloseModal}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}