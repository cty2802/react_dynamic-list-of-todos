{"version":3,"sources":["types/TodoStatus .ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoItem","todo","onHandleModal","selectedTodo","className","id","completed","classNames","title","type","onClick","TodoList","todos","map","TodoFilter","onChangeQuery","onChangeSelect","query","selectedOption","onSetSelectedOption","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setErrorMessage","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","newUser","catch","undefined","href","name","filterTodosByQuery","filter","content","normalizedQuery","trim","toLowerCase","includes","hasNormalizedQuery","filterBySelect","App","setTodos","setQuery","setSelectedTodo","setSelectedOption","errorMessage","newTodos","visibleTodos","handleModal","isShowModal","newQuery","newOption","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c896369c.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  onHandleModal: (todo: Todo) => void;\n  selectedTodo: Todo | undefined,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  onHandleModal,\n  selectedTodo,\n}) => {\n  return (\n    <tr\n      data-cy=\"todo\"\n      key={todo.id}\n    >\n      <td\n        className=\"is-vcentered\"\n      >\n        {todo.id}\n      </td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            'has-text-success',\n            { 'has-text-danger': !todo.completed },\n          )}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            onHandleModal(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={classNames({\n              'far fa-eye': selectedTodo !== todo,\n              'far fa-eye-slash': selectedTodo === todo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  onHandleModal: (todo: Todo) => void;\n  selectedTodo: Todo | undefined,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onHandleModal = () => {},\n  selectedTodo,\n}) => {\n  return (\n    <table\n      className=\"table is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            todo={todo}\n            onHandleModal={onHandleModal}\n            selectedTodo={selectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus ';\n\ntype Props = {\n  onChangeQuery: (query: string) => void,\n  onChangeSelect: (event: string) => void,\n  onSetSelectedOption: React.Dispatch<React.SetStateAction<string>>\n  query: string,\n  selectedOption: string,\n\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeQuery = () => {},\n  onChangeSelect = () => {},\n  query,\n  selectedOption,\n  onSetSelectedOption,\n}) => {\n  const onChangeSetQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChangeQuery(event.target.value);\n  };\n\n  const removeQuery = () => onChangeQuery('');\n\n  const handleChangeOption\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onSetSelectedOption(event.target.value);\n    onChangeSelect(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span\n          className=\"select\"\n        >\n          <select\n            data-cy=\"statusSelect\"\n            id=\"select\"\n            value={selectedOption}\n            onChange={handleChangeOption}\n          >\n            <option value={TodoStatus.All}>All</option>\n            <option value={TodoStatus.Active}>Active</option>\n            <option value={TodoStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p\n        className=\"control is-expanded has-icons-left has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onChangeSetQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: TodoStatus.All }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={removeQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onHandleModal: (todo: Todo | undefined) => void;\n  selectedTodo: Todo | null;\n  setErrorMessage: React.Dispatch<React.SetStateAction<string>>\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  onHandleModal = () => {},\n  selectedTodo,\n  setErrorMessage,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then((newUser) => {\n          setUser(newUser);\n          setIsLoading(false);\n        })\n        .catch(() => setErrorMessage('Try again later'));\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onHandleModal(undefined);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!selectedTodo?.completed\n                ? <strong className=\"has-text-danger\">Planned</strong>\n                : <strong className=\"has-text-success\">Done</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.name}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoStatus } from './types/TodoStatus ';\n\nfunction hasNormalizedQuery(content: string, query: string) {\n  const normalizedQuery = query.trim().toLowerCase();\n\n  return content.toLowerCase().includes(normalizedQuery);\n}\n\nfunction filterBySelect(todo: Todo, selectedOption: string) : boolean {\n  switch (selectedOption) {\n    case TodoStatus.Active:\n      return !todo.completed;\n    case TodoStatus.Completed:\n      return todo.completed;\n    default:\n      return true;\n  }\n}\n\nfunction filterTodosByQuery(todos: Todo[], query: string, selectedOption: string) {\n  if (!query && !selectedOption) {\n    return todos;\n  }\n\n  return todos.filter((todo) => (\n    hasNormalizedQuery(todo.title, query)\n    && filterBySelect(todo, selectedOption)\n  ));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | undefined>(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((newTodos) => {\n        setTodos(newTodos);\n        setIsLoading(false);\n      })\n      .catch(() => setErrorMessage('Try again later'));\n  }, []);\n\n  const visibleTodos = filterTodosByQuery(todos, query, selectedOption);\n\n  const handleModal = (todo: Todo | undefined) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleFilterCallBack = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  const handleChangeSelect = (newOption: string) => {\n    setSelectedOption(newOption);\n  };\n\n  const isShowModal = selectedTodo && !errorMessage && !isLoading;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeQuery={handleFilterCallBack}\n                onChangeSelect={handleChangeSelect}\n                query={query}\n                selectedOption={selectedOption}\n                onSetSelectedOption={setSelectedOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {!isLoading && !errorMessage && (\n                <TodoList\n                  todos={visibleTodos}\n                  onHandleModal={handleModal}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isShowModal && (\n        <TodoModal\n          onHandleModal={handleModal}\n          selectedTodo={selectedTodo}\n          setErrorMessage={setErrorMessage}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}